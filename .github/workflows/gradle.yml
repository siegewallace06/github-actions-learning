# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

# Name of Event(s) that trigger(s) the workflow
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

# Below is the part that is executed when an event happened
jobs:
# Name of the Job (We can name it with anything)
  build:

    runs-on: ubuntu-latest

    # Steps are sequence of tasks
    steps:
    # First, we checkout the code
    - uses: actions/checkout@v2
    # Prepare Java Environment with defined version
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
    # Grant execute permission for gradlew
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    # Build with Gradle
    - name: Build with Gradle
      run: ./gradlew build

    # Notify Telegram for Test CI/CD
    - name: Send Build Success Notification to Telegram
      run: curl -v -F "chat_id=${{ secrets.PATAR_ROOM_ID }}" -F "text=[CI/CD TESTING] The Code has been built successfully!. This is a Testing Message, please ignore - Eryanto" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage
    # Build and Push Docker Image to Docker Hub
    - name: Build and Push Docker Image to Docker Hub
      uses: mr-smithers-excellent/docker-build-push@v4
      with:
        context: .
        image: siegewallace06/demo-ci-cd-app
        registry: docker.io
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
        tag: latest
    # Notify Telegram for Docker Image Build Success
    - name: Send Docker Image Build Success Notification to Telegram
      run: curl -v -F "chat_id=${{ secrets.PATAR_ROOM_ID }}" -F "text=[CI/CD TESTING] The Docker Image has been built and pushed to siegewallace06/demo-ci-cd-app successfully!. This is a Testing Message, please ignore - Eryanto" https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage

